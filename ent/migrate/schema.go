// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// DietsColumns holds the columns for the "diets" table.
	DietsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "goal_weight", Type: field.TypeInt},
		{Name: "length", Type: field.TypeInt},
		{Name: "user_diets", Type: field.TypeInt, Nullable: true},
	}
	// DietsTable holds the schema information for the "diets" table.
	DietsTable = &schema.Table{
		Name:       "diets",
		Columns:    DietsColumns,
		PrimaryKey: []*schema.Column{DietsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "diets_users_diets",
				Columns: []*schema.Column{DietsColumns[6]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UserSettingsColumns holds the columns for the "user_settings" table.
	UserSettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "gender", Type: field.TypeEnum, Nullable: true, Enums: []string{"MALE", "FEMALE", "NONE"}},
		{Name: "age", Type: field.TypeInt, Nullable: true},
		{Name: "weight", Type: field.TypeInt, Nullable: true},
		{Name: "height", Type: field.TypeInt, Nullable: true},
		{Name: "level", Type: field.TypeEnum, Enums: []string{"BEGINNER", "INTERMEDIATE", "Advanced"}},
		{Name: "user_settings", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UserSettingsTable holds the schema information for the "user_settings" table.
	UserSettingsTable = &schema.Table{
		Name:       "user_settings",
		Columns:    UserSettingsColumns,
		PrimaryKey: []*schema.Column{UserSettingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "user_settings_users_settings",
				Columns: []*schema.Column{UserSettingsColumns[6]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DietsTable,
		UsersTable,
		UserSettingsTable,
	}
)

func init() {
	DietsTable.ForeignKeys[0].RefTable = UsersTable
	UserSettingsTable.ForeignKeys[0].RefTable = UsersTable
}
