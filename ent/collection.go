// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (e *ExerciseQuery) CollectFields(ctx context.Context, satisfies ...string) *ExerciseQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		e = e.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return e
}

func (e *ExerciseQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *ExerciseQuery {
	return e
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (pr *ProgramQuery) CollectFields(ctx context.Context, satisfies ...string) *ProgramQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		pr = pr.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return pr
}

func (pr *ProgramQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *ProgramQuery {
	return pr
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (s *ShoutQuery) CollectFields(ctx context.Context, satisfies ...string) *ShoutQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		s = s.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return s
}

func (s *ShoutQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *ShoutQuery {
	return s
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (u *UserQuery) CollectFields(ctx context.Context, satisfies ...string) *UserQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		u = u.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return u
}

func (u *UserQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *UserQuery {
	return u
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (us *UserSettingsQuery) CollectFields(ctx context.Context, satisfies ...string) *UserSettingsQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		us = us.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return us
}

func (us *UserSettingsQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *UserSettingsQuery {
	return us
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (w *WorkoutQuery) CollectFields(ctx context.Context, satisfies ...string) *WorkoutQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		w = w.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return w
}

func (w *WorkoutQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *WorkoutQuery {
	return w
}
